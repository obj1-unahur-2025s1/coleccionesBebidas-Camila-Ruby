import tito.*

describe "test de tito" {

    method initialize() {
        tito.consumir(5,whisky)
    }

    method consumoTerere() {
        tito.consumir(5,terere)
    }


    test "tito tiene peso 70" {
        assert.equals(70,tito.peso())
    }

    test "la velocidad de tito es " {
        assert.equals(0.9**5*490/70,tito.velocidad())
    }

    test "ahora la velocidad es 7 porque consumio terere" {
        tito.consumir(1, terere)
        assert.equals(7,tito.velocidad())
    }

    test "si consume cianuro la velocidad es cero porque muere" {
        tito.consumir(5, cianuro)
        assert.equals(0,tito.velocidad())
    }

    test "Si se le agregan nuevos ingredientes al licuado 
    luego que forme parte del coctel, 
    afecta al rendimiento que otorta el coctel" {
        assert.equals(0,licuado.nutrientesTotales())
        assert.equals(0, coctelDeBebidas.rendimiento(1))
        coctelDeBebidas.agregarBebida(licuado)
        licuado.agregar(10)
        assert.notEquals(0, coctelDeBebidas.rendimiento(1))
    }

    test "el coctel puede incluir whisky u agua saborizada con whisky" {
      coctelDeBebidas.agregarBebida(whisky)
      aguaSaborizada.bebida(whisky)
      coctelDeBebidas.agregarBebida(aguaSaborizada)
      assert.equals([whisky,aguaSaborizada], coctelDeBebidas.bebidas())
    }

    test "el coctel puede incluir agua saborizada con coctel" {
      aguaSaborizada.bebida(coctelDeBebidas)
      coctelDeBebidas.agregarBebida(aguaSaborizada)
      assert.equals([aguaSaborizada], coctelDeBebidas.bebidas())
      assert.equals(coctelDeBebidas, aguaSaborizada.bebida())
    }
}
